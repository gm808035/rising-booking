org: wildmint
app: rising-booking
service: rising-booking-test
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  logs:
    restApi: true
    httpApi: true
  region: eu-west-2
  stage: dev
  environment:
    DB_USERNAME: admin
    # decrypt at deploy time, not recommended
    DB_PASSWORD: adminpassword
    DB_DATABASE: database-1
    DB_HOST: database-1.cphbxirypjco.eu-west-2.rds.amazonaws.com
    # Sentry https://docs.sentry.io/product/integrations/aws-lambda/#serverless-framework
    SENTRY_TRACES_SAMPLE_RATE: "1.0"
  # vpc:
  #   securityGroupIds:
  #     - sg-008713b20bd431425
    # subnetIds: arn:aws:ec2:eu-west-2:24s5513588317:subnet/subnet-06c6762372e1182a2
  iam:
    role:
      - arn:aws:iam::245513588317:role/rising-booking

custom:
  serverless-offline:
    host: 0.0.0.0

functions:
  currentTime:
    handler: handler.endpoint
    events:
      - http:
          path: /pong
          method: get
  health:
    handler: src/functions/health.handler
    events:
      - http:
          path: /health
          method: get
  getVenueByCode:
    handler: src/functions/venue.getByCodeHandler
    events:
      - http:
          path: /venues/{code}
          method: get
          cors: true
          private: true
  getVenue:
    handler: src/functions/venue.getAllHandler
    events:
      - http:
          path: /venues
          method: get
          cors: true
  postPeakTimes:
    handler: src/functions/peakTimes.createHandler
    events:
      - http:
          path: /peakTimes/{schedule}
          method: post
          cors: true
          private: true
  patchPeakTimes:
    handler: src/functions/peakTimes.updatePeakHandler
    events:
      - http:
          path: /peakTimes/{schedule}
          method: patch
          cors: true
          private: true
  deletePeakTimes:
    handler: src/functions/peakTimes.deleteHandler
    events:
      - http:
          path: /peakTimes/{schedule}
          method: delete
          cors: true
          private: true
  #SMS
  patchBoxSlot:
    handler: src/functions/boxSlots.updateHandler
    events:
      - http:
          path: /boxSlots/{id}
          method: patch
          cors: true
          private: true
  patchLinkedBoxSlot:
    handler: src/functions/boxSlots.updateHandlerLinkedSlot
    events:
      - http:
          path: /boxSlots/link/{id}
          method: patch
          cors: true
          private: true
  createBoxSlot:
    handler: src/functions/boxSlots.createHandler
    events:
      - http:
          path: /boxSlots
          method: post
          cors: true
          private: true
  createBoxSlotsLinked:
    handler: src/functions/boxSlots.createLinkedHandler
    events:
      - http:
          path: /boxSlots/link
          method: post
          cors: true
          private: true
  filterBoxSlot:
    handler: src/functions/boxSlots.filterHandler
    events:
      - http:
          path: /boxSlots/filter
          method: post
          cors: true
          private: true
  deleteBoxSlot:
    handler: src/functions/boxSlots.deleteHandler
    events:
      - http:
          path: /boxSlots/delete
          method: post
          cors: true
          private: true
  deleteBoxSlotLinked:
    handler: src/functions/boxSlots.deleteLinkedSlot
    events:
      - http:
          path: /boxSlots/link/delete
          method: post
          cors: true
          private: true
  #SMS Schedule
  getScheduleByDateHandler:
    handler: src/functions/schedule.getScheduleByDateHandler
    events:
      - http:
          path: /schedule/{venue}/{date}
          method: get
          cors: true
          private: true
  createSchedule:
    handler: src/functions/schedule.createScheduleHandler
    events:
      - http:
          path: /schedule/{venue}
          method: post
          cors: true
          private: true
  applySchedule:
    handler: src/functions/schedule.applyScheduleHandler
    events:
      - http:
          path: /apply/schedule/{venue}/{schedule}
          method: post
          cors: true
          private: true
  applyScheduleAvailability:
    handler: src/functions/schedule.availabilityScheduleHandler
    events:
      - http:
          path: /apply/schedule/availability/{venue}/{schedule}
          method: post
          cors: true
          private: true
  filterSchedule:
    handler: src/functions/schedule.filterScheduleHandler
    events:
      - http:
          path: /schedule/filter/{venueId}
          method: get
          cors: true
          private: true
  deleteSchedule:
    handler: src/functions/schedule.deleteScheduleHandler
    events:
      - http:
          path: /schedule/type/{id}
          method: delete
          cors: true
          private: true
  updateSchedule:
    handler: src/functions/schedule.updateScheduleHandler
    events:
      - http:
          path: /schedule/type/{id}
          method: patch
          cors: true
          private: true
  getScheduleByIdHandler:
    handler: src/functions/schedule.getScheduleByIdHandler
    events:
      - http:
          path: /schedule/type/{id}
          method: get
          cors: true
          private: true
  copyScheduleById:
    handler: src/functions/schedule.copyScheduleByIdHandler
    events:
      - http:
          path: /schedule/type/{id}
          method: post
          cors: true
          private: true
  #SMS recurrence
  patchRecurrence:
    handler: src/functions/recurrence.updateHandler
    events:
      - http:
          path: /recurrences/{schedule}
          method: patch
          cors: true
          private: true
  postRecurrence:
    handler: src/functions/recurrence.createHandler
    events:
      - http:
          path: /recurrences/{schedule}
          method: post
          cors: true
          private: true
  patchOpenTime:
    handler: src/functions/openTimes.updateHandler
    events:
      - http:
          path: /openTime/{schedule}/{openTimeId}
          method: patch
          cors: true
          private: true