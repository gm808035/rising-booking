const { add, sub } = require("date-fns");

const code = "test-venue";
const created_at = new Date();
const updated_at = new Date();

const createVenue = async (queryInterface, Sequelize, transaction) => {
  await queryInterface.bulkInsert(
    "venue",
    [
      {
        name: "Test venue",
        code,
        created_at,
        updated_at,
      },
    ],
    {
      transaction,
    }
  );
  const [{ id: venue_id }] = await queryInterface.sequelize.query(
    "SELECT id FROM venue WHERE code = :code",
    {
      replacements: { code },
      type: Sequelize.QueryTypes.SELECT,
      transaction,
    }
  );
  return venue_id;
};

const createOpenTime = (queryInterface, Sequelize, transaction, venue_id) =>
  queryInterface.bulkInsert(
    "open_time",
    [
      {
        weekday: "Monday", // Monday
        start: "13:30",
        end: "19:00",
        venue_id,
        created_at,
        updated_at,
      },
      {
        weekday: "Thursday", // Thursday
        start: "09:00",
        end: "19:00",
        venue_id,
        created_at,
        updated_at,
      },
      {
        weekday: "Friday", // Friday
        start: "12:00",
        end: "19:00",
        venue_id,
        created_at,
        updated_at,
      },
      {
        weekday: "Saturday", // Saturday
        start: "12:00",
        end: "19:00",
        venue_id,
        created_at,
        updated_at,
      },
      {
        weekday: "Sunday", // Sunday
        start: "16:00",
        end: "17:00",
        venue_id,
        created_at,
        updated_at,
      },
      {
        weekday: "Tuesday", // Tuesday
        start: "22:30",
        end: "24:30",
        venue_id,
        created_at,
        updated_at,
      },
    ],
    {
      transaction,
    }
  );

const createBox = async (queryInterface, Sequelize, transaction, venue_id) => {
  const boxes = Array(5)
    .fill()
    .map((_, index) => ({
      name: index + 1,
      section: index === 0 ? 1 : 2,
      venue_id,
      created_at,
      updated_at,
    }));
  await queryInterface.bulkInsert("box", boxes, {
    transaction,
  });
  return queryInterface.sequelize
    .query("SELECT id FROM box WHERE venue_id = :venue_id AND name IN(:name)", {
      replacements: { venue_id, name: boxes.map((element) => element.name) },
      type: Sequelize.QueryTypes.SELECT,
      transaction,
    })
    .then((returnedBoxes) => returnedBoxes.map((box) => box.id));
};

const createBoxSlot = async (queryInterface, Sequelize, transaction, box_ids) =>
  queryInterface.bulkInsert(
    "box_slot",
    [
      {
        start: "09:00",
        duration: 90,
        box_id: box_ids[0],
        created_at,
        updated_at,
      },
      {
        start: "13:00",
        duration: 60,
        box_id: box_ids[0],
        created_at,
        updated_at,
      },
      {
        start: "14:00",
        duration: 90,
        box_id: box_ids[0],
        created_at,
        updated_at,
      },
      {
        start: "16:00",
        duration: 60,
        box_id: box_ids[0],
        created_at,
        updated_at,
      },
      {
        start: "18:00",
        duration: 60,
        box_id: box_ids[0],
        created_at,
        updated_at,
      },
      {
        start: "09:05",
        duration: 60,
        box_id: box_ids[1],
        created_at,
        updated_at,
      },
      {
        start: "11:14",
        duration: 90,
        box_id: box_ids[1],
        created_at,
        updated_at,
      },
      {
        start: "16:15",
        duration: 90,
        box_id: box_ids[2],
        created_at,
        updated_at,
      },
      {
        start: "23:00",
        duration: 60,
        box_id: box_ids[0],
        created_at,
        updated_at,
      },
    ],
    {
      transaction,
    }
  );

const createBooking = async (
  queryInterface,
  Sequelize,
  transaction,
  venue_id,
  box_ids
) => {
  const type = "social";
  const expiredBooking = sub(new Date(), { minutes: 20 });
  const expiredKioskBooking = sub(new Date(), { minutes: 5 });
  const box_id = box_ids[0];

  // separate so all other bookings are with default source
  await queryInterface.bulkInsert(
    "booking",
    [
      {
        start: "2021-03-01 14:00",
        end: "2021-03-01 15:30",
        source: "walkin",
        reference: "expired-kiosk-booking",
        session_id: "expired-kiosk-booking",
        box_id,
        venue_id,
        created_at,
        updated_at: expiredKioskBooking,
      },
      {
        start: "2021-03-01 14:00",
        end: "2021-03-01 15:30",
        source: "walkin",
        status: "Payment in progress",
        reference: "walkin-confirmed-booking",
        session_id: "walkin-confirmed-booking",
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
    ],
    { transaction }
  );
  return queryInterface.bulkInsert(
    "booking",
    [
      {
        start: "2021-01-01 12:00",
        end: "2021-01-01 14:00",
        status: "Paid",
        type,
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-01 19:00",
        end: "2021-01-01 20:00",
        status: "Paid",
        type,
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-02 12:00",
        end: "2021-01-02 18:00",
        status: "Paid",
        type,
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-04 14:00",
        end: "2021-01-04 15:00",
        status: "Paid",
        type,
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-05 23:05",
        end: "2021-01-06 00:05",
        status: "Paid",
        type,
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-11 13:30",
        end: "2021-01-11 18:00",
        status: "Paid",
        type,
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-14 13:30",
        end: "2021-01-14 14:30",
        status: "Paid",
        type,
        box_id,
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-02 09:00",
        end: "2021-01-02 19:00",
        status: "Paid",
        type,
        box_id: box_ids[2],
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-04 09:00",
        end: "2021-01-04 19:00",
        status: "Paid",
        type,
        box_id: box_ids[2],
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-11 09:00",
        end: "2021-01-11 19:00",
        status: "Paid",
        type,
        box_id: box_ids[2],
        venue_id,
        created_at,
        updated_at,
      },
      {
        start: "2021-01-11 18:00",
        end: "2021-01-11 19:00",
        status: "Paid",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        reference: "get-booking-price",
        session_id: "get-booking-price",
        created_at,
        updated_at,
      },
      {
        start: "2021-01-18 18:00",
        end: "2021-01-18 19:00",
        box_slot_start: "2021-01-18 18:05",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        reference: "confirm-booking",
        session_id: "confirm-booking",
        created_at,
        updated_at,
      },
      {
        start: "2021-01-18 18:00",
        end: "2021-01-18 19:30",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "3001",
        reference: "confirm-booking-90m",
        session_id: "confirm-booking-90m",
        created_at,
        updated_at,
      },
      {
        start: "2021-01-18 14:00",
        end: "2021-01-18 15:30",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "1501",
        reference: "confirm-booking-off-peak",
        session_id: "confirm-booking-off-peak",
        created_at,
        updated_at,
      },
      {
        start: "2022-04-07 09:00",
        end: "2022-04-07 10:30",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "1501",
        reference: "confirm-booking-bst-2022",
        session_id: "confirm-booking-bst-2022",
        created_at,
        updated_at,
      },
      {
        start: "2021-01-18 08:00",
        end: "2021-01-18 09:30",
        type,
        box_id,
        venue_id,
        status: "Paid",
        guests_no: 1,
        price: "1501",
        notes: "Booking for testing the from_timestamp",
        reference: "booking-updated-future",
        session_id: "booking-updated-future",
        created_at,
        updated_at: add(new Date(), { months: 1 }),
      },
      {
        start: "2021-03-02 08:00",
        end: "2021-03-02 09:30",
        type,
        box_id,
        venue_id,
        status: "Paid",
        guests_no: 1,
        price: "1501",
        reference: "cancel-booking",
        session_id: "cancel-booking",
        created_at,
        updated_at,
      },
      {
        start: "2021-03-01 09:00",
        end: "2021-03-01 18:00",
        type,
        box_id,
        venue_id,
        session_id: "expired-booking",
        reference: "expired-booking",
        created_at,
        updated_at: expiredBooking,
      },
      {
        start: "2021-03-01 14:00",
        end: "2021-03-01 15:30",
        type: "other",
        box_id,
        venue_id,
        session_id: "expired-other-booking",
        reference: "expired-other-booking",
        created_at,
        updated_at: expiredBooking,
      },
      {
        start: "2021-03-01 18:00",
        end: "2021-03-01 19:00",
        type,
        status: "Paid",
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "paid-booking",
        reference: "paid-booking",
        created_at,
        updated_at: expiredBooking,
      },
      {
        start: "2021-03-01 19:00",
        end: "2021-03-01 20:00",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        reference: "update-booking-guests",
        session_id: "update-booking-guests",
        created_at,
        updated_at,
      },
      {
        start: "2021-03-01 19:00",
        end: "2021-03-01 20:00",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        reference: "update-booking-extras",
        session_id: "update-booking-extras",
        created_at,
        updated_at,
      },
      {
        start: "2021-03-01 19:00",
        end: "2021-03-01 20:00",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        reference: "update-booking-time",
        session_id: "update-booking-time",
        created_at,
        updated_at,
      },
      {
        start: "2021-06-14 18:00",
        end: "2021-06-14 19:00",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2000",
        reference: "checkin-booking",
        session_id: "checkin-booking",
        created_at,
        updated_at,
      },
      {
        start: "2021-06-14 18:00",
        end: "2021-06-14 19:00",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2000",
        reference: "checkin-ref-booking",
        session_id: "checkin-ref-booking",
        created_at,
        updated_at,
      },
      {
        start: "2031-06-14 18:00",
        end: "2031-06-14 19:00",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2000",
        reference: "future-2031-checkin-booking",
        session_id: "future-2031-checkin-booking",
        created_at,
        updated_at,
      },
      // sections test date
      {
        start: "2021-05-01 12:00",
        end: "2021-05-01 17:00",
        type,
        status: "Paid",
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-01 17:00",
        end: "2021-05-01 19:00",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at: expiredBooking,
      },
      {
        start: "2021-05-06 09:00",
        end: "2021-05-06 12:00",
        box_slot_start: "2021-05-06 09:00",
        type,
        status: "Paid",
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 13:30",
        end: "2021-05-06 17:00",
        box_slot_start: "2021-05-06 13:30",
        type,
        status: "Paid",
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 12:00",
        end: "2021-05-07 19:00",
        box_slot_start: "2021-05-07 12:00",
        type,
        status: "Paid",
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-08 00:00",
        end: "2021-05-08 23:59",
        box_slot_start: null,
        type: "other",
        box_id,
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-10 13:30",
        end: "2021-05-10 19:00",
        box_slot_start: null,
        type: "other",
        box_id,
        venue_id,
        guests_no: 1,
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-01 13:15",
        end: "2021-05-01 18:00",
        type,
        status: "Paid",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 09:00",
        end: "2021-05-06 12:00",
        box_slot_start: "2021-05-06 09:00",
        type,
        status: "Paid",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 13:30",
        end: "2021-05-06 16:00",
        box_slot_start: "2021-05-06 13:30",
        type,
        status: "Paid",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 14:00",
        end: "2021-05-07 15:00",
        box_slot_start: "2021-05-07 14:00",
        type,
        status: "Paid",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 17:00",
        end: "2021-05-07 17:45",
        box_slot_start: "2021-05-07 17:00",
        type,
        status: "Paid",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-08 00:00",
        end: "2021-05-08 23:59",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-10 14:00",
        end: "2021-05-10 15:00",
        box_slot_start: null,
        type,
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-10 14:15",
        end: "2021-05-10 15:15",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-01 13:15",
        end: "2021-05-01 15:00",
        type,
        status: "Paid",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-01 15:15",
        end: "2021-05-01 16:45",
        type,
        status: "Paid",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-01 17:00",
        end: "2021-05-01 18:30",
        type,
        status: "Paid",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 09:00",
        end: "2021-05-06 12:00",
        box_slot_start: "2021-05-06 09:05",
        type,
        status: "Paid",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 13:30",
        end: "2021-05-06 16:00",
        box_slot_start: "2021-05-06 13:35",
        type,
        status: "Paid",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 13:45",
        end: "2021-05-07 15:15",
        box_slot_start: "2021-05-07 13:45",
        type,
        status: "Paid",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 17:00",
        end: "2021-05-07 17:45",
        box_slot_start: "2021-05-07 17:05",
        type,
        status: "Paid",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-08 00:00",
        end: "2021-05-08 23:59",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-10 14:00",
        end: "2021-05-10 15:00",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[2],
        venue_id,
        guests_no: 1,
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 09:00",
        end: "2021-05-06 12:00",
        box_slot_start: "2021-05-06 09:10",
        type,
        status: "Paid",
        box_id: box_ids[3],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 13:30",
        end: "2021-05-06 15:00",
        box_slot_start: "2021-05-06 13:40",
        type,
        status: "Paid",
        box_id: box_ids[3],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-01 12:00",
        end: "2021-05-01 19:00",
        type,
        status: "Paid",
        box_id: box_ids[3],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 12:00",
        end: "2021-05-07 15:00",
        box_slot_start: "2021-05-07 12:00",
        type,
        status: "Paid",
        box_id: box_ids[3],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 17:00",
        end: "2021-05-07 17:45",
        box_slot_start: "2021-05-07 17:10",
        type,
        status: "Paid",
        box_id: box_ids[3],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-08 00:00",
        end: "2021-05-08 23:59",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[3],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-10 14:00",
        end: "2021-05-10 15:00",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[3],
        venue_id,
        guests_no: 1,
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-01 12:00",
        end: "2021-05-01 19:00",
        type,
        status: "Paid",
        box_id: box_ids[4],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 10:15",
        end: "2021-05-06 11:15",
        box_slot_start: "2021-05-06 10:15",
        type,
        status: "Paid",
        box_id: box_ids[4],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-06 16:00",
        end: "2021-05-06 17:00",
        box_slot_start: "2021-05-06 16:00",
        type,
        status: "Paid",
        box_id: box_ids[4],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-07 12:00",
        end: "2021-05-07 16:00",
        box_slot_start: "2021-05-07 12:00",
        type,
        status: "Paid",
        box_id: box_ids[4],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-08 00:00",
        end: "2021-05-08 23:59",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[4],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: add(new Date(), { days: 1 }),
        end: add(new Date(), { days: 1, minutes: 60 }),
        status: "Paid",
        type,
        box_id,
        venue_id,
        guests_no: 1,
        price: "2000",
        reference: "24h-reminder-booking",
        session_id: "24h-reminder-booking",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-20 00:00",
        end: "2021-05-20 23:59",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[0],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
      {
        start: "2021-05-20 17:30",
        end: "2021-05-20 18:30",
        box_slot_start: null,
        type: "other",
        box_id: box_ids[1],
        venue_id,
        guests_no: 1,
        price: "2001",
        session_id: "box-session",
        reference: "box-session",
        created_at,
        updated_at,
      },
    ],
    {
      transaction,
    }
  );
};

module.exports = {
  up: async (queryInterface, Sequelize) => {
    const transaction = await queryInterface.sequelize.transaction();
    try {
      const venueId = await createVenue(queryInterface, Sequelize, transaction);

      await createOpenTime(queryInterface, Sequelize, transaction, venueId);

      const boxIds = await createBox(
        queryInterface,
        Sequelize,
        transaction,
        venueId
      );

      await createBoxSlot(queryInterface, Sequelize, transaction, boxIds);

      await createBooking(
        queryInterface,
        Sequelize,
        transaction,
        venueId,
        boxIds
      );

      await transaction.commit();
    } catch (err) {
      await transaction.rollback();
      throw err;
    }
  },

  down: async (queryInterface, Sequelize) => {
    const transaction = await queryInterface.sequelize.transaction();
    try {
      const venue = await queryInterface.sequelize.query(
        "SELECT id FROM venue WHERE code = :code",
        {
          replacements: { code },
          type: Sequelize.QueryTypes.SELECT,
          transaction,
        }
      );
      if (venue.length) {
        await queryInterface.bulkDelete(
          "booking",
          { venue_id: { [Sequelize.Op.eq]: venue[0].id } },
          { transaction }
        );
      }

      await queryInterface.bulkDelete(
        "venue",
        { code: { [Sequelize.Op.eq]: code } },
        { transaction }
      );
      await transaction.commit();
    } catch (err) {
      await transaction.rollback();
      throw err;
    }
  },
};
